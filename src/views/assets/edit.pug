extends ../layout/admin

block container  
  div(class="my-10")
 
    h2(class="text-center text-2xl font-extrabold")= namePage
    div(class="bg-white shadow py-8 px-4 rounded-lg mx-auto max-w-4xl my-10 md:px-10")
      form(
        method="POST"
        class="space-y-8"
        noValidate
        )
        div(class="space-y-8")
          h3(class="text-lg leading-6 font-medium text-gray-900") Datos del Bien
          p(class="text-gray-600") Asegurate de llenar todos los campos

          //- Number de Inventory 
          div(class="form-group")
            label(
              class="block text-sm uppercase text-gray-500 font-bold mb-2"
              for="inventory") Numero de Inventario
            //- Mostrar los errores en caso de que existan
            span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'inventory').map(error => `* ${error.msg} <br>`).join('') : '' 
            input(
              id="inventory", 
              class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
              placeholder="Ingresa el numero de inventario: ej. 1900355225",
              type="number", 
              name="inventory",
              value= data.inventory ? data.inventory : '',
              required
            )
          //- Serial number 
          div(class="form-group")
            label(
              class="block text-sm uppercase text-gray-500 font-bold mb-2"
              for="serial") Numero de Serie
            //- Mostrar los errores en caso de que existan
            span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'serial').map(error => `* ${error.msg} <br>`).join('') : '' 
            input(
              id="serial", 
              class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
              placeholder="Ingresa el numero de serie: ej. 40002514511",
              type="number", 
              name="serial", 
              value= data.serial ? data.serial : '',
              required
            )   
          //- Invoice number
          div(class="form-group")
            label(
              class="block text-sm uppercase text-gray-500 font-bold mb-2"
              for="invoiceNumber") Numero de Factura 
            //- Mostrar los errores en caso de que existan
            span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'invoiceNumber').map(error => `* ${error.msg} <br>`).join('') : '' 
            input(
              id="invoiceNumber", 
              class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
              placeholder="Ingresa el numero de factura: ej. 40002514511",
              type="number", 
              name="invoiceNumber", 
              value= data.invoiceNumber ? data.invoiceNumber : '',
              required
            )
          //- Survey Date
          div(class="form-group")
            label(
              class="block text-sm uppercase text-gray-500 font-bold mb-2"
              for="surveyDate") Fecha de Relevo 
            //- Mostrar los errores en caso de que existan
            span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'surveyDate').map(error => `* ${error.msg} <br>`).join('') : '' 
            input(
              id="surveyDate", 
              class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
              type="date", 
              name="surveyDate", 
              value= data.surveyDate ? data.surveyDate : new Date().toJSON().slice(0, 10).replace('T', ' '),
              required
            )


          div(class="md:flex md:gap-4 md:space-x-5 space-y-0")
            //- Type de Asset
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="typeAsset") Tipo de Bien 
                span(class="text-red-500") *
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'typeAsset').map(error => `* ${error.msg} <br>`).join('') : '' 


              select(
                id="typeAsset", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="typeAsset"
                )
                  option(value="") - Selecciona el tipo de bien -
                  each typeAsset in typeAssets
                    option(
                      value=typeAsset.id 
                      selected= data.typeAsset ? data.typeAsset == typeAsset.id ? true : false : null
                    )= typeAsset.name

            //- State
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="state") Estado 
                span(class="text-red-500") *
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'state').map(error => `* ${error.msg} <br>`).join('') : '' 
              select(
                id="state", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="state", 
                required
                )
                option(value="") - Selecciona el Estado -
                  each state in states
                    option(
                      value=state.id
                      selected= data.state ? data.state == state.id ? true : false : null
                    )= state.name 


          div(class="md:flex md:gap-4 md:space-x-5 md:space-y-0")
            //- Area
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="area") Area 
                span(class="text-red-500") *
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'area').map(error => `* ${error.msg} <br>`).join('') : '' 
              select(
                id="area", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="area"
                )
                  option(value="") - Selecciona el area -
                  each area in areas
                    option(
                      value=area.id
                      selected= data.area ? data.area == area.id ? true : false : null
                    )= area.name
            //- Location
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="building") Edificio 
                span(class="text-red-500") *
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'building').map(error => `* ${error.msg} <br>`).join('') : '' 
              select(
                id="building", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="building"
                )
                  option(value="") - Selecciona el Edificio -
                  each building in buildings
                    option(
                      value=building.id
                      selected= data.building ? data.building == building.id ? true : false : null
                    )= building.name

          div(class="md:flex md:gap-4 md:space-x-5 md:space-y-0")
            //- Weighting
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="weighting") Ponderacion
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'weighting').map(error => `* ${error.msg} <br>`).join('') : '' 
              select(
                id="weighting", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="weighting"
                )
                  option(value="") - Seleccione la Ponderacion-
                    each weighting in weightings
                      option(
                        value=weighting.id
                        selected= data.weighting ? data.weighting == weighting.id ? true : false : null
                      )= weighting.name

            //- Situation
            div(class="form-group md:w-1/2")
              label(
                class="block text-sm uppercase text-gray-500 font-bold mb-2"
                for="situation") Situacion
              //- Mostrar los errores en caso de que existan
              span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'situation').map(error => `* ${error.msg} <br>`).join('') : '' 
              select(
                id="situation", 
                class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
                name="situation"
                )
                  option(value="") - Selecciona la Situacion del Bien -
                    each situation in situations
                      option(
                        value=situation.id
                        selected= data.situation ? data.situation == situation.id ? true : false : null
                      )= situation.name

          //- Description
          div(class="form-group")
            label(
              class="block text-sm uppercase text-gray-500 font-bold mb-2"
              for="description") Descripcion
            //- Mostrar los errores en caso de que existan
            span(class="text-red-500 text-xs")!= errors && errors.length > 0 ? errors.filter(error => error.path == 'description').map(error => `* ${error.msg} <br>`).join('') : '' 

            textarea(
              id="description", 
              class="form-control w-full py-2 px-3  border border-gray-300 rounded-lg mb-2 placeholder-gray-500",
              placeholder="Ingresa la descripcion del bien",
              name="description",
              required
            )= data.description ? data.description : ''

          div(class="md:flex md:gap-4 md:space-x-5 md:space-y-0 ")
            //- Submit
            div(class="md:w-1/3 flex flex-col")
              input( 
              class="w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg  cursor-pointer uppercase" type="submit"
              onClick="return confirm('¿Estás seguro de guardar los cambios?')"
              value="Guardar ")

            //- Delete
            div(class="md:w-1/3 flex flex-col py-3 md:py-0")
              button(
              class="w-full bg-gray-100 hover:bg-gray-200 text-red-600 border border-gray-200 font-bold py-2 px-4 rounded-lg  cursor-pointer uppercase",
              type="button"
              onClick=`deleteAsset("${data.id}")`
              ) Eliminar 
            //- Regresar
            div(class="md:w-1/3 flex flex-col ")
              a( 
              class="w-full bg-gray-500 hover:bg-gray-600 border text-white font-bold py-2 px-4 rounded-lg  cursor-pointer uppercase text-center" 
              href="/assets/list"
              )= "Regresar "
              
      //- form(action=`/assets/delete/${data.id}`, method="POST")
      //-         input(
      //-            class="w-full bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg  cursor-pointer uppercase" 
      //-            type="submit" 
      //-            onClick="return confirm('¿Estás seguro de eliminar el bien?')"
      //-            value="Eliminar Bien")



      //- form(action=`/assets/delete/${data.id}`, method="POST")
      //-   input( class="w-full bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg  cursor-pointer uppercase" type="submit" value="Eliminar Bien")

block scripts
  script(src="/js/assets/delete.js")
  script(src="/js/choices.js")
  script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")

